trigger:
- master

variables:
  buildConfiguration: 'Release'
  vmImageName: 'ubuntu-latest'
  webAppName: 'demo-azure-logging'
  subscription: 'demologgingconn'
  outputDirectory: '$(Build.ArtifactStagingDirectory)'
  buildArtifactName: 'drop'

stages:

# Continuous Integration (CI)

# Build Stage
- stage: Build
  displayName: Build Stage (CI)
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
       
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restore .NET Core project files'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build .NET Core project files'
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Publish .NET Core project files'
      inputs:
        command: 'publish'
        publishWebProjects: False
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(outputDirectory)'
        zipAfterPublish: True

    - task: PublishPipelineArtifact@0
      displayName: 'Publish Build Artifacts'
      inputs:
        targetPath: '$(outputDirectory)'
        artifactName: '$(buildArtifactName)'

# Continuous Delivery (CD)

# Development Stage
- stage: Dev 
  displayName: Dev Stage (CD)
  dependsOn: 'Build'
  condition: succeeded('Build')
  jobs:
  - deployment: 'Dev'
    displayName: 'Dev'
    environment: 'development'
    pool: 
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@1
            displayName: 'Download Pipeline Artifact'
            inputs:
              buildType: 'current'

          - task: AzureWebApp@1
            displayName: 'Deploy LoggingAPI to Azure Web App $(webAppName)'
            inputs: 
              azureSubscription: '$(subscription)'
              appType: 'webApp'
              appName: '$(webAppName)'
              package: '$(System.ArtifactsDirectory)/$(buildArtifactName)/LoggingAPI.zip'
              deploymentMethod: 'zipDeploy'
